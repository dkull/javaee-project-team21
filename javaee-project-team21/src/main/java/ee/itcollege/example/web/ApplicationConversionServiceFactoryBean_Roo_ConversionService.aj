// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package ee.itcollege.example.web;

import ee.itcollege.example.entities.AdminUnit;
import ee.itcollege.example.entities.AdminUnitHierarchy;
import ee.itcollege.example.entities.AdminUnitType;
import ee.itcollege.example.entities.AdminUnitTypeHierarchy;
import ee.itcollege.example.entities.Regiment;
import ee.itcollege.example.entities.RegimentHierarchy;
import java.lang.String;
import org.springframework.core.convert.converter.Converter;
import org.springframework.format.FormatterRegistry;

privileged aspect ApplicationConversionServiceFactoryBean_Roo_ConversionService {
    
    public void ApplicationConversionServiceFactoryBean.installLabelConverters(FormatterRegistry registry) {
        registry.addConverter(new AdminUnitConverter());
        registry.addConverter(new AdminUnitHierarchyConverter());
        registry.addConverter(new AdminUnitTypeConverter());
        registry.addConverter(new AdminUnitTypeHierarchyConverter());
        registry.addConverter(new RegimentConverter());
        registry.addConverter(new RegimentHierarchyConverter());
    }
    
    public void ApplicationConversionServiceFactoryBean.afterPropertiesSet() {
        super.afterPropertiesSet();
        installLabelConverters(getObject());
    }
    
    static class ee.itcollege.example.web.ApplicationConversionServiceFactoryBean.AdminUnitConverter implements Converter<AdminUnit, String> {
        public String convert(AdminUnit adminUnit) {
            return new StringBuilder().append(adminUnit.getOpenedBy()).append(" ").append(adminUnit.getOpenedDate()).append(" ").append(adminUnit.getChangedBy()).append(" ").append(adminUnit.getChangedDate()).toString();
        }
        
    }
    
    static class ee.itcollege.example.web.ApplicationConversionServiceFactoryBean.AdminUnitHierarchyConverter implements Converter<AdminUnitHierarchy, String> {
        public String convert(AdminUnitHierarchy adminUnitHierarchy) {
            return new StringBuilder().append(adminUnitHierarchy.getOpenedBy()).append(" ").append(adminUnitHierarchy.getOpenedDate()).append(" ").append(adminUnitHierarchy.getChangedBy()).append(" ").append(adminUnitHierarchy.getChangedDate()).toString();
        }
        
    }
    
    static class ee.itcollege.example.web.ApplicationConversionServiceFactoryBean.AdminUnitTypeConverter implements Converter<AdminUnitType, String> {
        public String convert(AdminUnitType adminUnitType) {
            return new StringBuilder().append(adminUnitType.getOpenedBy()).append(" ").append(adminUnitType.getOpenedDate()).append(" ").append(adminUnitType.getChangedBy()).append(" ").append(adminUnitType.getChangedDate()).toString();
        }
        
    }
    
    static class ee.itcollege.example.web.ApplicationConversionServiceFactoryBean.AdminUnitTypeHierarchyConverter implements Converter<AdminUnitTypeHierarchy, String> {
        public String convert(AdminUnitTypeHierarchy adminUnitTypeHierarchy) {
            return new StringBuilder().append(adminUnitTypeHierarchy.getOpenedBy()).append(" ").append(adminUnitTypeHierarchy.getOpenedDate()).append(" ").append(adminUnitTypeHierarchy.getChangedBy()).append(" ").append(adminUnitTypeHierarchy.getChangedDate()).toString();
        }
        
    }
    
    static class ee.itcollege.example.web.ApplicationConversionServiceFactoryBean.RegimentConverter implements Converter<Regiment, String> {
        public String convert(Regiment regiment) {
            return new StringBuilder().append(regiment.getOpenedBy()).append(" ").append(regiment.getOpenedDate()).append(" ").append(regiment.getChangedBy()).append(" ").append(regiment.getChangedDate()).toString();
        }
        
    }
    
    static class ee.itcollege.example.web.ApplicationConversionServiceFactoryBean.RegimentHierarchyConverter implements Converter<RegimentHierarchy, String> {
        public String convert(RegimentHierarchy regimentHierarchy) {
            return new StringBuilder().append(regimentHierarchy.getOpenedBy()).append(" ").append(regimentHierarchy.getOpenedDate()).append(" ").append(regimentHierarchy.getChangedBy()).append(" ").append(regimentHierarchy.getChangedDate()).toString();
        }
        
    }
    
}
